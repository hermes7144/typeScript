{
  /**
   * Print Loading State
   */
  type LoadingState = {
    state: 'loading';
  };

  type SuccessState = {
    state: 'success';
    response: {
      body: string;
    };
  };

  type FailState = {
    state: 'fail';
    reason: string;
  };

  type ResourceLoadState = LoadingState | SuccessState | FailState;

  printLoginState({ state: 'loading' }); // ðŸ‘€ loading...
  printLoginState({ state: 'success', response: { body: 'loaded' } }); // ðŸ˜ƒ loaded
  printLoginState({ state: 'fail', reason: 'no network' }); // ðŸ˜± no network

  function printLoginState(type: ResourceLoadState): void {
    switch (type.state) {
      case 'loading':
        console.log('ðŸ‘€ loading...');
        break;
      case 'success':
        console.log(`ðŸ˜ƒ ${type.response.body}`);
        break;
      case 'fail':
        console.log(`ðŸ˜± type.reason`);
    }
  }
}

